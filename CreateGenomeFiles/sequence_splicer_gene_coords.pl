#!/usr/bin/perl

use strict;
use warnings;

open (my $fh1, "<", $ARGV[0]) or die "Can't open $ARGV[0]\n"; #input SORTED bed file that includes genomic elements with there names (in the 4th column) + sequnce in the 7th column. Genomic elements with the same name will be combined (e.g. exons of the same gene should have the same name).
#Input file can be generated by bedtools fastaFromBed (v2.26+) using -bedOut -s options 
open (my $fh2, ">", $ARGV[1]) or die "Can't open $ARGV[1]\n"; #output fasta file with sequences for each element that were combined from several sub-element sequences, if exist 

my @data; #array for lines splitted data
my %hash; #hash of arrays of arrays (HoAoA). key - element name. value - array which stores arrays for each of the parts that make the element. the subarrays includes the following fields: chr, start (0-based), end, sequence of sub-element

while (my $line = <$fh1>) {
	chomp $line;
	@data = split("\t",$line); #split each BED record to an array
	my $key = $data[3]; #hash key
	my @subelement_data = (@data[0..2],@data[5..6]); #assign chr, start, end, strand and sequence
	my $strand = $data[5]; #check for the strand
	if (not ($strand eq "+")) { 
		unshift(@{ $hash{$key} }, \@subelement_data); #append the "sub-array" to the beginning of the element array under the appropriate hash key in case of MINUS strand
	} else { 
		push(@{ $hash{$key} }, \@subelement_data); #push the "sub-array" to the end of the element array under the appropriate hash key when the element is on the POSITIVE strand 
	}
}

foreach my $key (keys(%hash)) {
	my $seq = ""; #reset sequence
	my $coords = $hash{$key}[0][3]." ".$hash{$key}[0][0]; #assign the strand and chr to the coords to be printed
	foreach my $i (0..$#{ $hash{$key} }) {
		$seq.=$hash{$key}[$i][4];
		$coords.=" ".$hash{$key}[$i][1]."-".$hash{$key}[$i][2]; #adds the start and end coordinates of each subelement to the coords to be printed
	}
	print $fh2 ">$key $coords\n";
	PRINT_SEQ: while ($seq ne "") {
		my $sub_seq = substr($seq,0,60,""); #pulls out sub-strings of the sequence in order to print them in fasta format (ie - line length < 80) 
		print $fh2 $sub_seq,"\n";
	}
	# foreach my $i (0..$#{ $hash{$key} }) { #DEBUG
		# print join("\t",($i,@{ $hash{$key}[$i] })),"\n";
	# }
}

close $fh1;
close $fh2;
